plugins {
  id 'java-library'
  id 'maven-publish'
  id "io.freefair.lombok" version "${lombokPluginVersion}"
}

// > gradle clean test publishToMavenLocal
// https://docs.gradle.org/current/userguide/publishing_maven.html
publishing {
  publications {
    maven(MavenPublication) {
      groupId = 'org.fp024.test.util'
      artifactId = "${project.name}"
      version = '0.0.1-SNAPSHOT'

      from components.java
    }
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of("${javaVersion}")
  }
}

compileJava.options.encoding = "${projectEncoding}"
compileTestJava.options.encoding = "${projectEncoding}"

repositories {
  mavenCentral()
}

dependencies {
  implementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
  implementation "org.mockito:mockito-core:${mockitoVersion}"

  testImplementation "org.apache.logging.log4j:log4j-slf4j2-impl:${log4jVersion}"
  testRuntimeOnly "org.junit.platform:junit-platform-launcher"
  testImplementation "org.assertj:assertj-core:${assertJVersion}"

  // 예전엔 JodaTime을 잘 사용했었는데... 그냥 궁금해서 테스트에만 추가해서 사용해보자!
  testImplementation "joda-time:joda-time:${jodaTimeVersion}"
}

tasks.named('test') {
  // Use JUnit Platform for unit tests.
  /*
    터미널에서 테스트 클래스 실행 예시
    > gradlew test --tests *AddUserMainTest.testAddUser
  */
  useJUnitPlatform()
  testLogging {
    outputs.upToDateWhen { false }
    showStandardStreams = true
  }
}
